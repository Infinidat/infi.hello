
# http://pypi.python.org/pypi/zc.buildout#predefined-buildout-options

[buildout]
index = http://pypi01.xsignnet.local/simple/
# this setup.py and all the git sub-repositories we use
develop = . 
    parts/infinidat.recipe.python
    parts/goodbye
parts = python-distribution setup.py VERSION scripts
# do not use eggs from site-packages
include-site-packages = false
# The name of a section containing information about the default Python interpreter
python = python-distribution
# bin/buildout will be generated with code that makes the paths relative
relative-paths = true
# unzip safe-zip eggs. Zipped eggs make debugging more difficult
unzip = true
# location of the download cache is specified by the download-cache option
download-cache = .cache
log-level = DEBUG

[project]
# the project name, this will be copied into setup.py
name = infinidat.hello
VERSION_FILE = ${buildout:directory}/src/inifinidat/hello/__VERSION__.py

# The namespace_packages argument to setup() lets you declare your project's namespace packages, 
# so that they will be included in your project's metadata. 
# The argument should list the namespace packages that the egg participates in.
namespace_packages = 'infinidat'
# A string or list of strings specifying what other distributions need to be installed when this one is
# We use namespaced packages so we must require setuptools
install_requires = 'setuptools'

[setup.py]
recipe = infinidat.host.recipe.version
input = setup.in
output = setup.py

[VERSION]
recipe = infinidat.host.recipe.version
input = inline:
    __import__("pkg_resources").declare_namespace(__name__)
    version = '${infinidat.host.recipe.version:version}',
output = ${project:VERSION_FILE}

[python-distribution]
develop = 
recipe = infinidat.recipe.python
version = 2.7.1
executable = bin/python

[scripts]
recipe = zc.recipe.egg
relative-paths = true
unzip = true
# this will install the dependencies as defined in setup.py
# this will create the scripts from all dependencies
dependent-scripts = true 
eggs = ${project:name}
    ipython
# implicit script generation
scripts = 
    hello

[pydev]
recipe = pb.recipes.pydev
eggs = ${scripts:eggs}

